[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "enhanced-url-summarizer"
version = "1.0.0"
description = "A comprehensive command-line tool that summarizes URLs using LLM fragments with advanced features"
authors = [
    {name = "Enhanced URL Summarizer", email = "contact@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
keywords = ["llm", "summarization", "cli", "url", "ai", "fragments", "reddit", "youtube", "hacker-news"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Utilities",
    "Environment :: Console",
]

# Core dependencies - managed by uv
dependencies = [
    "llm>=0.13.0",
    "llm-ollama>=0.3.0",
    "llm-fragments-reddit>=0.1.0",
    "llm-hacker-news>=0.1.0", 
    "llm-fragments-youtube>=0.1.0",
    # Web application dependencies
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "jinja2>=3.1.0",
    "python-multipart>=0.0.6",
    # OpenGraph and web scraping
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    # Data analysis
    "datasette>=0.64.0",
    "pydantic-settings>=2.0.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "ruff>=0.0.285",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-requests>=2.31.0",
    "types-beautifulsoup4>=4.12.0",
]

# Testing dependencies
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "responses>=0.23.0",
]

# Documentation dependencies  
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
    "mkdocstrings[python]>=0.22.0",
]

# Performance profiling
profile = [
    "py-spy>=0.3.14",
    "memory-profiler>=0.61.0",
]

# All optional dependencies
all = [
    "enhanced-url-summarizer[dev,test,docs,profile]"
]

[project.scripts]
# Multiple entry points for flexibility
url-summarizer = "claude_llm:main"
summarize-url = "claude_llm:main"
llm-summarizer = "claude_llm:main"
esum = "claude_llm:main"
# Web application entry point
llm-digest-web = "web_app:main"

[project.urls]
Homepage = "https://github.com/yourusername/enhanced-url-summarizer"
Repository = "https://github.com/yourusername/enhanced-url-summarizer"
Issues = "https://github.com/yourusername/enhanced-url-summarizer/issues"
Documentation = "https://github.com/yourusername/enhanced-url-summarizer/blob/main/README.md"
Changelog = "https://github.com/yourusername/enhanced-url-summarizer/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["enhanced_url_summarizer.py"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.pytest_cache
  | build
  | dist
)/
'''

# Ruff configuration (replaces flake8, isort, and more)
[tool.ruff]
line-length = 88
target-version = "py39"
exclude = ["llm-shared/"]
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
]
lint.ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["enhanced_url_summarizer"]

# MyPy configuration
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
exclude = ["llm-shared/", "tests/"]

[[tool.mypy.overrides]]
module = [
    "llm.*",
    "llm_fragments_reddit.*",
    "llm_hacker_news.*", 
    "llm_fragments_youtube.*",
    "fastapi.*",
    "uvicorn.*",
    "datasette.*",
    "pytest.*",
    "pydantic_settings.*",
    "responses.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "web_app"
disable_error_code = ["misc"]

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=enhanced_url_summarizer",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["enhanced_url_summarizer"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError", 
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "# pragma: no cover",
    "# type: ignore",
]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

# UV-specific configuration for dependency management
[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "ruff>=0.0.285",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-requests>=2.31.0",
]

# Dependency groups for uv
[dependency-groups]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "responses>=0.23.0",
]
lint = [
    "black>=23.7.0",
    "ruff>=0.0.285",
    "mypy>=1.5.0",
]
dev = [
    "enhanced-url-summarizer[test,lint]",
    "pre-commit>=3.3.0",
    "types-beautifulsoup4>=4.12.0.20250516",
]
